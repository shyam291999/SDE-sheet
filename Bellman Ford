int bellmonFord(int n, int m, int src, int dest, vector<vector<int>> &edges) {
    // Write your code here.
    
    vector<int> dist(n+1, 1e9);
    dist[src] = 0;
    for(int i=0;i<n-1;i++){
        for(auto it: edges){
            int u = it[0];
            int v = it[1];
            int w = it[2];
//             int newdist = dist[u] == 1e9 ? 1e9 : dist[u] + w;
//             dist[v] = min(dist[v],newdist); 
            if(dist[u] + w < dist[v] and dist[u]!=1e9){
                dist[v] = dist[u] + w;
            }
        }
    }
    if (dist[dest] == 1e9){
        return 1e9;
    }
    else{
        return dist[dest];
    }
    
}


steps 
first iterate through all edges till n-1 times
after that you will satisfy all the edges with minimum nodes
find min dist by comparing dist[u] + w < dist[v] 
while finding minimum dist distt[u]!=1e9 must not be infinite this is corner case remember that
