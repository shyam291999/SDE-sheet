#include<algorithm>

static bool comparator(vector<int> a, vector<int> b){
    return a[1] > b[1];
}
int jobScheduling(vector<vector<int>> &jobs)
{
    // Write your code here
    int n = jobs.size();

    sort(jobs.begin(), jobs.end(), comparator);
    int max_deadline = 0;
    for(int i=0;i<n;i++){
        max_deadline = max(max_deadline, jobs[i][0]);
    }
    vector<int> slot(max_deadline+1, -1);
    int max_profit = 0;
    for(int i=0;i<n;i++){
        for(int j=jobs[i][0];j>0;j--){
            if(slot[j] == -1){
                slot[j] = i;
                max_profit += jobs[i][1];
                break;
            }
        }
    }
    
    return max_profit;
}

steps 
 sort according to maximum profit so that if we pick less number of thasks then also we generate max profit
 find the maximum deadline and make an array so that we can store the task_id that which task has to perform on that day
 if there is some task on that day so you can schedule that task  on previous day 
